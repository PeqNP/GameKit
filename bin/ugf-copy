#!/usr/bin/env python
#
# Copies files from game project to Cocos2d-x project.
#
# @copyright 2015 Upstart Illustration LLC. All rights reserved.
#

import os
import sys
import shutil

from datetime import datetime
from subprocess  import call

from ugf import gethomedir, emptydir, rmdir
from ugf.config import configpath, checkconfig, Config, ProjectConfig
from ugf.pathbuilder import CocosPathBuilder, GameKitPathBuilder, StagePathBuilder, ProjectPathBuilder

def copy_gamekit(gamekit, source, cocos):
    rmdir(cocos.path("src/ugf"))
    # @todo fix this path
    call(["cp", "-r", gamekit.path("src"), cocos.path("src/ugf")])

def copy_ios_assets(source, cocos):
    emptydir(cocos.path("frameworks/runtime-src/proj.ios_mac/GameTools-mobile"))
    call(["cp", "-r", source.resourcepath("ios", "Images.xcassets"), cocos.path("frameworks/runtime-src/proj.ios_mac/GameTools-mobile/")])
    call(["cp", "-r", source.xibpath(), cocos.path("frameworks/runtime-src/proj.ios_mac/ios/")])

def copy_android_assets(source, cocos):
    drawables = ["drawable", "drawable-hdpi", "drawable-ldpi", "drawable-mdpi", "drawable-xhdpi"]
    for drawable in drawables:
        targetdir = cocos.androidprojpath("res/" + drawable)
        shutil.rmtree(targetdir)
        os.makedirs(targetdir)
        call(["cp", "-r", source.resourcepath("android", drawable), cocos.androidprojpath("res/")])

def copy_resources(source, cocos):
    rmdir(cocos.path("res"))
    call(["cp", "-r", source.path("res"), cocos.path("res")])

def copy_source(source, cocos):
    rmdir(cocos.path("src/game"))
    call(["cp", "-r", source.path("src"), cocos.path("src/game")])

if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description="Upstart Game Framework - Copy project files to Cocos2d-x project")
    parser.add_argument('files', help="Copies all project files", nargs="*", default=["all"])
    args = parser.parse_args()

    config = Config.load(configpath())
    checkconfig(config)

    source = ProjectPathBuilder(config)
    gamekit = GameKitPathBuilder(config)
    project = ProjectConfig.load(source.configpath())
    cocos = CocosPathBuilder(config, project.cocos)

    print("ugf-copy v1.0.0, Time: {}".format(str(datetime.now())))
    if config.apptype and len(config.apptype) > 0:
        print("Type: {}".format(config.apptype))

    # Validate
    valid_options = ["all", "assets", "gamekit", "project", "resource"]
    for opt in args.files:
        if opt not in valid_options:
            print("'{}' is not a valid 'files' option".format(opt))
            sys.exit(1)

    if "all" in args.files:
        print "Copying all files."
        copy_ios_assets(source, cocos)
        copy_gamekit(gamekit, source, cocos)
        copy_source(source, cocos)
        copy_resources(source, cocos)
        sys.exit(0)
    
    if "assets" in args.files:
        print "Copying project asset files."
        copy_ios_assets(source, cocos)
        copy_android_assets(source, cocos)
    if "gamekit" in args.files:
        print "Copying GameKit files."
        copy_gamekit(gamekit, source, cocos)
    if "project" in args.files:
        print "Copying project source files."
        copy_source(source, cocos)
    if "resource" in args.files:
        print "Copying project resource files."
        copy_resources(source, cocos)
