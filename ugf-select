#!/usr/bin/env python

#  Options:
#  select -- selects game
#  clean -- completely cleans currently selected game from Cocos2d-x environment.
#     git clean -f -d <path>   -- removes all untracked files
#

from datetime import datetime
from subprocess import call

import json
import os
import re
import sys

CPATH = "/Users/eric/git/Cocos2d-x_v3.8.1/"
JSON = "/Users/eric/git/LittleGhostBoy/config.json"

fh = open(JSON, "r")
json_blob = fh.read()
fh.close()

config = json.loads(json_blob)

print("ugf-select v1.0.0, Time: {}".format(str(datetime.now())))
print("Project: {} v{} b{}".format(config["name"], config["version"], config["build"]))

# Load and save any changes made to the project to the current project
# NOTE: I'm not sure this is necessary.

# Load the target project - config.json

# Save the target project as the current project
# NOTE: I'm not sure this is necessary.

# If the project does not exist, take the template for the given version of Cocos2d-x and replace all
# instances of the template name 'GameTools' with the target app's name.

# Interpolate template files: (The app will raise an exception if the files below do not contain the tags)
"""
  templates/config.lua (src/config.lua)
    - UGF-DESIGN-WIDTH = config.design.width
    - UGF-DESIGN-HEIGHT = config.design.height
    - UGF-SHOW-FPS = (CLI Switch) --show-fps then: true, else: false

  templates/ios/GameTools.xcodeproj/project.pbxproj
    - UGF-APP-BUNDLE = config.bundle
    - UGF-APP-NAME = config.name
    - UGF-APP-VERSION = config.version
    - UGF-APP-BUILD = config.build
    - UGF-DEVICE = config.device
    - UGF-ORIENTATION.* = config.orientation
    - UGF-FACEBOOK-ID = config.facebook.id
  templates/ios/*.plist
    - UGF-APP-NAME = config.name (bundle display name)
  templates/ios/Prefix.pch
    - UGF-HOCKEY-APP-ID = config.hockey.id
    - UGF-ADCOLONY-APP-ID = config.ios.adcolony.id
    - UGF-ADCOLONY-ZONES = config.ios.adcolony.zones

  Special cases:
    - UGF-IOS-ORIENTATION-LANDSCAPE = config.design.orientation (landscape)
    - UGF-IOS-ORIENTATION-LANDSCAPE = config.design.orientation (landscape)
    - UGF-IOS-ORIENTATION-PORTRAIT = config.design.orientation (portrait)
    - UGF-ANDROID-ORIENTATION-LANDSCAPE
    - UGF-ANDROID-ORIENTATION-PORTRAIT

  Possible. For now, just comment out.:
    - UGF-FACEBOOK-IOS = config.facebook.enabled
    - UGF-FACEBOOK-ANDROID = ?
    - UGF-ADCOLONY-IOS = config.adcolony.ios.enabled, writes: configureAdColony method
"""

TPL_PATH = CPATH + "stage/"

if not os.path.exists(TPL_PATH):
    os.makedirs(TPL_PATH)

# , "##UGF-ADCOLONY-APP-ZONES##": '", @"'.join(config["mediation"]["ios"]["adcolony"]["zones"])
keys = {
    "##UGF-APP-BUNDLE##": config["bundle"]
  , "##UGF-APP-NAME##": config["name"]
  , "##UGF-APP-EXECUTABLE##": re.sub(" ", "", config["name"])
  , "##UGF-APP-VERSION##": config["version"]
  , "##UGF-APP-BUILD##": config["build"]
  , "##UGF-HOCKEY-APP-ID##": config["hockey"]["id"]
  , "##UGF-ADCOLONY-APP-ID##": config["mediation"]["ios"]["adcolony"]["id"]
  , "##UGF-ADCOLONY-APP-ZONES##": ",".join(config["mediation"]["ios"]["adcolony"]["zones"])
  , "##UGF-FACEBOOK-ID##": config["facebook"]["id"]
}

files = [
    "templates/ios/Info.plist": "frameworks/runtime-src/proj.ios_mac/ios/Info.plist"
  , "templates/ios/Prefix.pch": "frameworks/runtime-src/proj.ios_mac/ios/Prefix.pch"
]

# Replace 'GameTools' w/ UGF-APP-EXECUTABLE IN THIS ORDER!
# - (GameTools-mobile).app
# - /* (GameTools-mobile) */
# - "(GameTools-mobile)"

# templates/ios/Prefix.pch
# frameworks/runtime-src/proj.ios_mac/ios/Prefix.pch
# build/ios/Prefix.pch
for tpl, target in keys(files).iteritems:
    # Read
    fh = open(CPATH + tpl, "r")
    blob = fh.read()
    for key, val in keys.iteritems():
        blob = re.sub(key, val, blob)
    fh.close()
    # Write
    stagepath = CPATH + "stage/" + os.path.split(tpl)[1]
    fh = open(stagepath, "w")
    fh.write(blob)
    fh.close()
    # Copy from stage/(tpl) to (target)
    #shutil.copyfile(stagepath, CPATH + target)

# Cleanup stage directory

sys.exit(0)

# The orientation config may need to be specific to files so that operations are checked correctly, but also that
# some options are removed!

# Copy interpolated file to correct location.
# NOTE: Make it so all of the config for the app lives in this file, including AdMob interstitial info, etc.

# Copy Xcode assets
call(["rm", "-rf", "/Users/eric/git/Cocos2d-x_v3.8.1/frameworks/runtime-src/proj.ios_mac/GameTools-mobile/Images.xcassets/AppIcon.appiconset"])
call(["rm", "-rf", "/Users/eric/git/Cocos2d-x_v3.8.1/frameworks/runtime-src/proj.ios_mac/GameTools-mobile/Images.xcassets/LaunchImage.launchimage"])

call(["cp", "-r", "/Users/eric/git/LittleGhostBoy/platform/ios/resources/AppIcon.appiconset", "/Users/eric/git/Cocos2d-x_v3.8.1/frameworks/runtime-src/proj.ios_mac/GameTools-mobile/Images.xcassets/AppIcon.appiconset"])
call(["cp", "-r", "/Users/eric/git/LittleGhostBoy/platform/ios/resources/LaunchImage.launchimage", "/Users/eric/git/Cocos2d-x_v3.8.1/frameworks/runtime-src/proj.ios_mac/GameTools-mobile/Images.xcassets/LaunchImage.launchimage"])

# Copy Android assets

# Copy GameTools
call(["rm", "-rf", "/Users/eric/git/Cocos2d-x_v3.8.1/src/ugf"])
call(["cp", "-r", "/Users/eric/git/GameTools/src/", "/Users/eric/git/Cocos2d-x_v3.8.1/src/ugf"])

# Copy game source and assets
call(["rm", "-rf", "/Users/eric/git/Cocos2d-x_v3.8.1/src/game"])
call(["cp", "-r", "/Users/eric/git/LittleGhostBoy/src/", "/Users/eric/git/Cocos2d-x_v3.8.1/src/game"])

call(["rm", "-rf", "/Users/eric/git/Cocos2d-x_v3.8.1/res"])
call(["cp", "-r", "/Users/eric/git/LittleGhostBoy/res", "/Users/eric/git/Cocos2d-x_v3.8.1/res"])

# Update a compile time script that will call this script with the currently selected project before build
# so that all of the latest code is copied.
